{"basePath": "/calendar/v3/", "kind": "discovery#restDescription", "protocol": "rest", "name": "calendar", "parameters": {"prettyPrint": {"default": "true", "type": "boolean", "description": "Returns response with indentations and line breaks.", "location": "query"}, "fields": {"type": "string", "description": "Selector specifying which fields to include in a partial response.", "location": "query"}, "quotaUser": {"type": "string", "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.", "location": "query"}, "oauth_token": {"type": "string", "description": "OAuth 2.0 token for the current user.", "location": "query"}, "key": {"type": "string", "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location": "query"}, "userIp": {"type": "string", "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.", "location": "query"}, "alt": {"description": "Data format for the response.", "default": "json", "enum": ["json"], "enumDescriptions": ["Responses with Content-Type of application/json"], "location": "query", "type": "string"}}, "title": "Calendar API", "description": "Lets you manipulate events and other calendar data.", "icons": {"x32": "http://www.google.com/images/icons/product/calendar-32.png", "x16": "http://www.google.com/images/icons/product/calendar-16.png"}, "baseUrl": "https://www.googleapis.com/calendar/v3/", "auth": {"oauth2": {"scopes": {"https://www.googleapis.com/auth/calendar.readonly": {"description": "View your calendars"}, "https://www.googleapis.com/auth/calendar": {"description": "Manage your calendars"}}}}, "version": "v3", "schemas": {"CalendarListEntry": {"type": "object", "id": "CalendarListEntry", "properties": {"kind": {"default": "calendar#calendarListEntry", "type": "string", "description": "Type of the resource (\"calendar#calendarListEntry\")."}, "foregroundColor": {"type": "string", "description": "The foreground color of the calendar in the format '#ffffff'. This property supersedes the index-based colorId property. Optional."}, "defaultReminders": {"items": {"$ref": "EventReminder"}, "type": "array", "description": "The default reminders that the authenticated user has for this calendar."}, "description": {"type": "string", "description": "Description of the calendar. Optional. Read-only."}, "colorId": {"type": "string", "description": "The color of the calendar. This is an ID referring to an entry in the \"calendar\" section of the colors definition (see the \"colors\" endpoint). Optional."}, "selected": {"type": "boolean", "description": "Whether the calendar content shows up in the calendar UI. Optional. The default is False."}, "primary": {"type": "boolean", "description": "Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False."}, "summary": {"type": "string", "description": "Title of the calendar. Read-only."}, "etag": {"type": "string", "description": "ETag of the resource."}, "location": {"type": "string", "description": "Geographic location of the calendar as free-form text. Optional. Read-only."}, "backgroundColor": {"type": "string", "description": "The main color of the calendar in the format '#0088aa'. This property supersedes the index-based colorId property. Optional."}, "summaryOverride": {"type": "string", "description": "The summary that the authenticated user has set for this calendar. Optional."}, "timeZone": {"type": "string", "description": "The time zone of the calendar. Optional. Read-only."}, "hidden": {"type": "boolean", "description": "Whether the calendar has been hidden from the list. Optional. The default is False."}, "accessRole": {"type": "string", "description": "The effective access role that the authenticated user has on the calendar. Read-only. Possible values are:  \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."}, "id": {"type": "string", "description": "Identifier of the calendar.", "annotations": {"required": ["calendar.calendarList.insert"]}}}}, "ColorDefinition": {"type": "object", "id": "ColorDefinition", "properties": {"foreground": {"type": "string", "description": "The foreground color that can be used to write on top of a background with 'background' color."}, "background": {"type": "string", "description": "The background color associated with this color definition."}}}, "EventDateTime": {"type": "object", "id": "EventDateTime", "properties": {"date": {"type": "string", "description": "The date, in the format \"yyyy-mm-dd\", if this is an all-day event.", "format": "date"}, "timeZone": {"type": "string", "description": "The name of the time zone in which the time is specified (e.g. \"Europe/Zurich\"). Optional. The default is the time zone of the calendar."}, "dateTime": {"type": "string", "description": "The time, as a combined date-time value (formatted according to RFC 3339). A time zone offset is required unless a time zone is explicitly specified in 'timeZone'.", "format": "date-time"}}}, "Setting": {"type": "object", "id": "Setting", "properties": {"kind": {"default": "calendar#setting", "type": "string", "description": "Type of the resource (\"calendar#setting\")."}, "etag": {"type": "string", "description": "ETag of the resource."}, "id": {"type": "string", "description": "Name of the user setting."}, "value": {"type": "string", "description": "Value of the user setting. The format of the value depends on the ID of the setting."}}}, "Events": {"type": "object", "id": "Events", "properties": {"nextPageToken": {"type": "string", "description": "Token used to access the next page of this result. Omitted if no further results are available."}, "kind": {"default": "calendar#events", "type": "string", "description": "Type of the collection (\"calendar#events\")."}, "defaultReminders": {"items": {"$ref": "EventReminder"}, "type": "array", "description": "The default reminders on the calendar for the authenticated user. These reminders apply to all events on this calendar that do not explicitly override them (i.e. do not have 'reminders.useDefault' set to 'true')."}, "description": {"type": "string", "description": "Description of the calendar. Read-only."}, "items": {"items": {"$ref": "Event"}, "type": "array", "description": "List of events on the calendar."}, "updated": {"type": "string", "description": "Last modification time of the calendar (as a RFC 3339 timestamp). Read-only.", "format": "date-time"}, "summary": {"type": "string", "description": "Title of the calendar. Read-only."}, "etag": {"type": "string", "description": "ETag of the collection."}, "timeZone": {"type": "string", "description": "The time zone of the calendar. Read-only."}, "accessRole": {"type": "string", "description": "The user's access role for this calendar. Read-only. Possible values are:  \n- \"none\" - The user has no access. \n- \"freeBusyReader\" - The user has read access to free/busy information. \n- \"reader\" - The user has read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - The user has read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - The user has ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."}}}, "EventAttendee": {"type": "object", "id": "EventAttendee", "properties": {"comment": {"type": "string", "description": "The attendee's response comment. Optional."}, "displayName": {"type": "string", "description": "The attendee's name, if available. Optional."}, "responseStatus": {"type": "string", "description": "The attendee's response status. Possible values are:  \n- \"needsAction\" - The attendee has not responded to the invitation. \n- \"declined\" - The attendee has declined the invitation. \n- \"tentative\" - The attendee has tentatively accepted the invitation. \n- \"accepted\" - The attendee has accepted the invitation."}, "self": {"type": "boolean", "description": "Whether this entry represents the calendar on which this copy of the event appears. Read-only. The default is False."}, "id": {"type": "string", "description": "The attendee's Profile ID, if available."}, "additionalGuests": {"type": "integer", "description": "Number of additional guests. Optional. The default is 0.", "format": "int32"}, "resource": {"type": "boolean", "description": "Whether the attendee is a resource. Read-only. The default is False."}, "organizer": {"type": "boolean", "description": "Whether the attendee is the organizer of the event. Read-only. The default is False."}, "optional": {"type": "boolean", "description": "Whether this is an optional attendee. Optional. The default is False."}, "email": {"type": "string", "description": "The attendee's email address, if available. This field must be present when adding an attendee.", "annotations": {"required": ["calendar.events.import", "calendar.events.insert", "calendar.events.update"]}}}}, "CalendarList": {"type": "object", "id": "CalendarList", "properties": {"nextPageToken": {"type": "string", "description": "Token used to access the next page of this result."}, "items": {"items": {"$ref": "CalendarListEntry"}, "type": "array", "description": "Calendars that are present on the user's calendar list."}, "kind": {"default": "calendar#calendarList", "type": "string", "description": "Type of the collection (\"calendar#calendarList\")."}, "etag": {"type": "string", "description": "ETag of the collection."}}}, "EventReminder": {"type": "object", "id": "EventReminder", "properties": {"minutes": {"annotations": {"required": ["calendar.calendarList.insert", "calendar.calendarList.update", "calendar.events.import", "calendar.events.insert", "calendar.events.update"]}, "type": "integer", "description": "Number of minutes before the start of the event when the reminder should trigger.", "format": "int32"}, "method": {"type": "string", "description": "The method used by this reminder. Possible values are:  \n- \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders are sent via SMS. \n- \"popup\" - Reminders are sent via a UI popup.", "annotations": {"required": ["calendar.calendarList.insert", "calendar.calendarList.update", "calendar.events.import", "calendar.events.insert", "calendar.events.update"]}}}}, "TimePeriod": {"type": "object", "id": "TimePeriod", "properties": {"start": {"type": "string", "description": "The (inclusive) start of the time period.", "format": "date-time"}, "end": {"type": "string", "description": "The (exclusive) end of the time period.", "format": "date-time"}}}, "FreeBusyGroup": {"type": "object", "id": "FreeBusyGroup", "properties": {"errors": {"items": {"$ref": "Error"}, "type": "array", "description": "Optional error(s) (if computation for the group failed)."}, "calendars": {"items": {"type": "string"}, "type": "array", "description": "List of calendars' identifiers within a group."}}}, "Subscription": {"type": "object", "id": "Subscription", "properties": {"topicId": {"type": "string", "description": "An opaque topic id that identifies the backend resource which has been subscribed to. Stable across different API versions"}, "kind": {"default": "api#subscription", "type": "string", "description": "A subscription to an API resource"}, "topicUri": {"type": "string", "description": "The canonicalized URI of the subscribed-to resource."}, "address": {"type": "string", "description": "The address of the receiving entity where notifications are delivered. Specific to the channel mechanism."}, "expiration": {"type": "string", "description": "The expiration instant for this subscription if it is defined.", "format": "int64"}, "channelParams": {"additionalProperties": {"type": "string", "description": "Declares a new parameter by name."}, "type": "object", "description": "Additional parameters controlling delivery channel behavior"}, "clientToken": {"type": "string", "description": "An arbitrary string associated with the subscription that is delivered to the target address with each notification for this subscription."}, "id": {"type": "string", "description": "A UUID for the subscription"}, "channel": {"type": "string", "description": "The delivery channel mechanism to use for notifications"}}}, "Settings": {"type": "object", "id": "Settings", "properties": {"items": {"items": {"$ref": "Setting"}, "type": "array", "description": "List of user settings."}, "kind": {"default": "calendar#settings", "type": "string", "description": "Type of the collection (\"calendar#settings\")."}, "etag": {"type": "string", "description": "Etag of the collection."}}}, "FreeBusyResponse": {"type": "object", "id": "FreeBusyResponse", "properties": {"timeMax": {"type": "string", "description": "The end of the interval.", "format": "date-time"}, "kind": {"default": "calendar#freeBusy", "type": "string", "description": "Type of the resource (\"calendar#freeBusy\")."}, "calendars": {"additionalProperties": {"$ref": "FreeBusyCalendar", "description": "Free/busy expansions for a single calendar."}, "type": "object", "description": "List of free/busy information for calendars."}, "timeMin": {"type": "string", "description": "The start of the interval.", "format": "date-time"}, "groups": {"additionalProperties": {"$ref": "FreeBusyGroup", "description": "List of calendars that are members of this group."}, "type": "object", "description": "Expansion of groups."}}}, "Acl": {"type": "object", "id": "Acl", "properties": {"nextPageToken": {"type": "string", "description": "Token used to access the next page of this result. Omitted if no further results are available."}, "items": {"items": {"$ref": "AclRule"}, "type": "array", "description": "List of rules on the access control list."}, "kind": {"default": "calendar#acl", "type": "string", "description": "Type of the collection (\"calendar#acl\")."}, "etag": {"type": "string", "description": "ETag of the collection."}}}, "Error": {"type": "object", "id": "Error", "properties": {"domain": {"type": "string", "description": "Domain, or broad category, of the error."}, "reason": {"type": "string", "description": "Specific reason for the error. Some of the possible values are:  \n- \"groupTooBig\" - The group of users requested is too large for a single query. \n- \"tooManyCalendarsRequested\" - The number of calendars requested is too large for a single query. \n- \"notFound\" - The requested resource was not found. \n- \"internalError\" - The API service has encountered an internal error.  Additional error types may be added in the future, so clients should gracefully handle additional error statuses not included in this list."}}}, "AclRule": {"type": "object", "id": "AclRule", "properties": {"scope": {"annotations": {"required": ["calendar.acl.insert"]}, "type": "object", "description": "The scope of the rule.", "properties": {"type": {"type": "string", "description": "The type of the scope. Possible values are:  \n- \"default\" - The public scope. This is the default value. \n- \"user\" - Limits the scope to a single user. \n- \"group\" - Limits the scope to a group. \n- \"domain\" - Limits the scope to a domain.  Note: The permissions granted to the \"default\", or public, scope apply to any user, authenticated or not.", "annotations": {"required": ["calendar.acl.insert"]}}, "value": {"type": "string", "description": "The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type \"default\"."}}}, "kind": {"default": "calendar#aclRule", "type": "string", "description": "Type of the resource (\"calendar#aclRule\")."}, "etag": {"type": "string", "description": "ETag of the resource."}, "role": {"type": "string", "description": "The role assigned to the scope. Possible values are:  \n- \"none\" - Provides no access. \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.", "annotations": {"required": ["calendar.acl.insert"]}}, "id": {"type": "string", "description": "Identifier of the ACL rule."}}}, "Calendar": {"type": "object", "id": "Calendar", "properties": {"kind": {"default": "calendar#calendar", "type": "string", "description": "Type of the resource (\"calendar#calendar\")."}, "description": {"type": "string", "description": "Description of the calendar. Optional."}, "summary": {"type": "string", "description": "Title of the calendar.", "annotations": {"required": ["calendar.calendars.insert"]}}, "etag": {"type": "string", "description": "ETag of the resource."}, "location": {"type": "string", "description": "Geographic location of the calendar as free-form text. Optional."}, "timeZone": {"type": "string", "description": "The time zone of the calendar. Optional."}, "id": {"type": "string", "description": "Identifier of the calendar."}}}, "FreeBusyCalendar": {"type": "object", "id": "FreeBusyCalendar", "properties": {"busy": {"items": {"$ref": "TimePeriod"}, "type": "array", "description": "List of time ranges during which this calendar should be regarded as busy."}, "errors": {"items": {"$ref": "Error"}, "type": "array", "description": "Optional error(s) (if computation for the calendar failed)."}}}, "Colors": {"type": "object", "id": "Colors", "properties": {"calendar": {"additionalProperties": {"$ref": "ColorDefinition", "description": "A calendar color defintion."}, "type": "object", "description": "Palette of calendar colors, mapping from the color ID to its definition. An 'calendarListEntry' resource refers to one of these color IDs in its 'color' field. Read-only."}, "updated": {"type": "string", "description": "Last modification time of the color palette (as a RFC 3339 timestamp). Read-only.", "format": "date-time"}, "event": {"additionalProperties": {"$ref": "ColorDefinition", "description": "An event color definition."}, "type": "object", "description": "Palette of event colors, mapping from the color ID to its definition. An 'event' resource may refer to one of these color IDs in its 'color' field. Read-only."}, "kind": {"default": "calendar#colors", "type": "string", "description": "Type of the resource (\"calendar#colors\")."}}}, "FreeBusyRequest": {"type": "object", "id": "FreeBusyRequest", "properties": {"calendarExpansionMax": {"type": "integer", "description": "Maximal number of calendars for which FreeBusy information is to be provided. Optional.", "format": "int32"}, "groupExpansionMax": {"type": "integer", "description": "Maximal number of calendar identifiers to be provided for a single group. Optional. An error will be returned for a group with more members than this value.", "format": "int32"}, "timeMax": {"type": "string", "description": "The end of the interval for the query.", "format": "date-time"}, "items": {"items": {"$ref": "FreeBusyRequestItem"}, "type": "array", "description": "List of calendars and/or groups to query."}, "timeMin": {"type": "string", "description": "The start of the interval for the query.", "format": "date-time"}, "timeZone": {"type": "string", "description": "Time zone used in the response. Optional. The default is UTC."}}}, "FreeBusyRequestItem": {"type": "object", "id": "FreeBusyRequestItem", "properties": {"id": {"type": "string", "description": "The identifier of a calendar or a group."}}}, "Event": {"type": "object", "id": "Event", "properties": {"creator": {"type": "object", "description": "The creator of the event. Read-only.", "properties": {"self": {"type": "boolean", "description": "Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False."}, "displayName": {"type": "string", "description": "The creator's name, if available."}, "email": {"type": "string", "description": "The creator's email address, if available."}, "id": {"type": "string", "description": "The creator's Profile ID, if available."}}}, "organizer": {"type": "object", "description": "The organizer of the event. If the organizer is also an attendee, this is indicated with a separate entry in 'attendees' with the 'organizer' field set to True. To change the organizer, use the \"move\" operation. Read-only, except when importing an event.", "properties": {"self": {"type": "boolean", "description": "Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False."}, "displayName": {"type": "string", "description": "The organizer's name, if available."}, "email": {"type": "string", "description": "The organizer's email address, if available."}, "id": {"type": "string", "description": "The organizer's Profile ID, if available."}}}, "summary": {"type": "string", "description": "Title of the event."}, "id": {"type": "string", "description": "Identifier of the event."}, "hangoutLink": {"type": "string", "description": "An absolute link to the Google+ hangout associated with this event. Read-only."}, "attendees": {"items": {"$ref": "EventAttendee"}, "type": "array", "description": "The attendees of the event."}, "htmlLink": {"type": "string", "description": "An absolute link to this event in the Google Calendar Web UI. Read-only."}, "recurrence": {"items": {"type": "string"}, "type": "array", "description": "List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event. This field is omitted for single events or instances of recurring events."}, "start": {"$ref": "EventDateTime", "annotations": {"required": ["calendar.events.import", "calendar.events.insert", "calendar.events.update"]}, "description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance."}, "etag": {"type": "string", "description": "ETag of the resource."}, "location": {"type": "string", "description": "Geographic location of the event as free-form text. Optional."}, "recurringEventId": {"type": "string", "description": "For an instance of a recurring event, this is the event ID of the recurring event itself. Immutable."}, "gadget": {"type": "object", "description": "A gadget that extends this event.", "properties": {"preferences": {"additionalProperties": {"type": "string", "description": "The preference name and corresponding value."}, "type": "object", "description": "Preferences."}, "title": {"type": "string", "description": "The gadget's title."}, "height": {"type": "integer", "description": "The gadget's height in pixels. Optional.", "format": "int32"}, "width": {"type": "integer", "description": "The gadget's width in pixels. Optional.", "format": "int32"}, "link": {"type": "string", "description": "The gadget's URL."}, "type": {"type": "string", "description": "The gadget's type."}, "display": {"type": "string", "description": "The gadget's display mode. Optional. Possible values are:  \n- \"icon\" - The gadget displays next to the event's title in the calendar view. \n- \"chip\" - The gadget displays when the event is clicked."}, "iconLink": {"type": "string", "description": "The gadget's icon URL."}}}, "status": {"type": "string", "description": "Status of the event. Optional. Possible values are:  \n- \"confirmed\" - The event is confirmed. This is the default status. \n- \"tentative\" - The event is tentatively confirmed. \n- \"cancelled\" - The event is cancelled."}, "updated": {"type": "string", "description": "Last modification time of the event (as a RFC 3339 timestamp). Read-only.", "format": "date-time"}, "description": {"type": "string", "description": "Description of the event. Optional."}, "iCalUID": {"type": "string", "description": "Event ID in the iCalendar format.", "annotations": {"required": ["calendar.events.import"]}}, "extendedProperties": {"type": "object", "description": "Extended properties of the event.", "properties": {"shared": {"additionalProperties": {"type": "string", "description": "The name of the shared property and the corresponding value."}, "type": "object", "description": "Properties that are shared between copies of the event on other attendees' calendars."}, "private": {"additionalProperties": {"type": "string", "description": "The name of the private property and the corresponding value."}, "type": "object", "description": "Properties that are private to the copy of the event that appears on this calendar."}}}, "endTimeUnspecified": {"type": "boolean", "description": "Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False."}, "sequence": {"type": "integer", "description": "Sequence number as per iCalendar.", "format": "int32"}, "visibility": {"type": "string", "description": "Visibility of the event. Optional. Possible values are:  \n- \"default\" - Uses the default visibility for events on the calendar. This is the default value. \n- \"public\" - The event is public and event details are visible to all readers of the calendar. \n- \"private\" - The event is private and only event attendees may view event details. \n- \"confidential\" - The event is private. This value is provided for compatibility reasons."}, "guestsCanModify": {"type": "boolean", "description": "Whether attendees other than the organizer can modify the event. Optional. The default is False."}, "end": {"$ref": "EventDateTime", "annotations": {"required": ["calendar.events.import", "calendar.events.insert", "calendar.events.update"]}, "description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance."}, "attendeesOmitted": {"type": "boolean", "description": "Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the 'maxAttendee' query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False."}, "kind": {"default": "calendar#event", "type": "string", "description": "Type of the resource (\"calendar#event\")."}, "locked": {"type": "boolean", "description": "Whether this is a locked event copy where no changes can be made to the main event fields \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only."}, "created": {"type": "string", "description": "Creation time of the event (as a RFC 3339 timestamp). Read-only.", "format": "date-time"}, "colorId": {"type": "string", "description": "The color of the event. This is an ID referring to an entry in the \"event\" section of the colors definition (see the \"colors\" endpoint). Optional."}, "anyoneCanAddSelf": {"type": "boolean", "description": "Whether anyone can invite themselves to the event. Optional. The default is False."}, "reminders": {"type": "object", "description": "Information about the event's reminders for the authenticated user.", "properties": {"overrides": {"items": {"$ref": "EventReminder"}, "type": "array", "description": "If the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event."}, "useDefault": {"type": "boolean", "description": "Whether the default reminders of the calendar apply to the event."}}}, "guestsCanSeeOtherGuests": {"type": "boolean", "description": "Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True."}, "originalStartTime": {"$ref": "EventDateTime", "description": "For an instance of a recurring event, this is the time at which this event would start according to the recurrence data in the recurring event identified by recurringEventId. Immutable."}, "guestsCanInviteOthers": {"type": "boolean", "description": "Whether attendees other than the organizer can invite others to the event. Optional. The default is True."}, "transparency": {"type": "string", "description": "Whether the event blocks time on the calendar. Optional. Possible values are:  \n- \"opaque\" - The event blocks time on the calendar. This is the default value. \n- \"transparent\" - The event does not block time on the calendar."}, "privateCopy": {"type": "boolean", "description": "Whether this is a private event copy where changes are not shared with other copies on other calendars. Optional. Immutable. The default is False."}}}}, "etag": "\"95FJOuWe9QdOljMvtEYMArTvwNI/2lWlxOFZZ_g0_MDEXRMEdhHDwVY\"", "servicePath": "calendar/v3/", "rootUrl": "https://www.googleapis.com/", "discoveryVersion": "v1", "documentationLink": "https://developers.google.com/google-apps/calendar/firstapp", "batchPath": "batch", "id": "calendar:v3", "resources": {"freebusy": {"methods": {"query": {"scopes": ["https://www.googleapis.com/auth/calendar", "https://www.googleapis.com/auth/calendar.readonly"], "description": "Returns free/busy information for a set of calendars.", "request": {"$ref": "FreeBusyRequest"}, "id": "calendar.freebusy.query", "httpMethod": "POST", "path": "freeBusy", "response": {"$ref": "FreeBusyResponse"}}}}, "settings": {"methods": {"list": {"scopes": ["https://www.googleapis.com/auth/calendar", "https://www.googleapis.com/auth/calendar.readonly"], "description": "Returns all user settings for the authenticated user.", "id": "calendar.settings.list", "httpMethod": "GET", "path": "users/me/settings", "response": {"$ref": "Settings"}}, "get": {"scopes": ["https://www.googleapis.com/auth/calendar", "https://www.googleapis.com/auth/calendar.readonly"], "description": "Returns a single user setting.", "parameters": {"setting": {"required": true, "type": "string", "description": "Name of the user setting.", "location": "path"}}, "response": {"$ref": "Setting"}, "httpMethod": "GET", "parameterOrder": ["setting"], "path": "users/me/settings/{setting}", "id": "calendar.settings.get"}}}, "calendarList": {"methods": {"insert": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Adds an entry to the user's calendar list.", "parameters": {"colorRgbFormat": {"type": "boolean", "description": "Whether to use the 'foregroundColor' and 'backgroundColor' fields to write the calendar colors (RGB). If this feature is used, the index-based 'colorId' field will be set to the best matching option automatically. Optional. The default is False.", "location": "query"}}, "request": {"$ref": "CalendarListEntry"}, "response": {"$ref": "CalendarListEntry"}, "httpMethod": "POST", "path": "users/me/calendarList", "id": "calendar.calendarList.insert"}, "get": {"scopes": ["https://www.googleapis.com/auth/calendar", "https://www.googleapis.com/auth/calendar.readonly"], "description": "Returns an entry on the user's calendar list.", "parameters": {"calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}}, "response": {"$ref": "CalendarListEntry"}, "httpMethod": "GET", "parameterOrder": ["calendarId"], "path": "users/me/calendarList/{calendarId}", "id": "calendar.calendarList.get"}, "list": {"scopes": ["https://www.googleapis.com/auth/calendar", "https://www.googleapis.com/auth/calendar.readonly"], "description": "Returns entries on the user's calendar list.", "parameters": {"pageToken": {"type": "string", "description": "Token specifying which result page to return. Optional.", "location": "query"}, "showHidden": {"type": "boolean", "description": "Whether to show hidden entries. Optional. The default is False.", "location": "query"}, "maxResults": {"location": "query", "minimum": "1", "type": "integer", "description": "Maximum number of entries returned on one result page. Optional.", "format": "int32"}, "minAccessRole": {"enumDescriptions": ["The user can read free/busy information.", "The user can read and modify events and access control lists.", "The user can read events that are not private.", "The user can read and modify events."], "enum": ["freeBusyReader", "owner", "reader", "writer"], "type": "string", "description": "The minimum access role for the user in the returned entires. Optional. The default is no restriction.", "location": "query"}}, "id": "calendar.calendarList.list", "httpMethod": "GET", "path": "users/me/calendarList", "response": {"$ref": "CalendarList"}}, "update": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Updates an entry on the user's calendar list.", "parameters": {"colorRgbFormat": {"type": "boolean", "description": "Whether to use the 'foregroundColor' and 'backgroundColor' fields to write the calendar colors (RGB). If this feature is used, the index-based 'colorId' field will be set to the best matching option automatically. Optional. The default is False.", "location": "query"}, "calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}}, "request": {"$ref": "CalendarListEntry"}, "response": {"$ref": "CalendarListEntry"}, "httpMethod": "PUT", "parameterOrder": ["calendarId"], "path": "users/me/calendarList/{calendarId}", "id": "calendar.calendarList.update"}, "patch": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Updates an entry on the user's calendar list. This method supports patch semantics.", "parameters": {"colorRgbFormat": {"type": "boolean", "description": "Whether to use the 'foregroundColor' and 'backgroundColor' fields to write the calendar colors (RGB). If this feature is used, the index-based 'colorId' field will be set to the best matching option automatically. Optional. The default is False.", "location": "query"}, "calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}}, "request": {"$ref": "CalendarListEntry"}, "response": {"$ref": "CalendarListEntry"}, "httpMethod": "PATCH", "parameterOrder": ["calendarId"], "path": "users/me/calendarList/{calendarId}", "id": "calendar.calendarList.patch"}, "delete": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Deletes an entry on the user's calendar list.", "parameters": {"calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}}, "httpMethod": "DELETE", "parameterOrder": ["calendarId"], "path": "users/me/calendarList/{calendarId}", "id": "calendar.calendarList.delete"}}}, "subscriptions": {"methods": {"unsubscribe": {"path": "subscriptions/unsubscribe", "scopes": ["https://www.googleapis.com/auth/calendar", "https://www.googleapis.com/auth/calendar.readonly"], "request": {"$ref": "Subscription"}, "id": "calendar.subscriptions.unsubscribe", "httpMethod": "POST"}}}, "calendars": {"methods": {"insert": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Creates a secondary calendar.", "request": {"$ref": "Calendar"}, "id": "calendar.calendars.insert", "httpMethod": "POST", "path": "calendars", "response": {"$ref": "Calendar"}}, "get": {"scopes": ["https://www.googleapis.com/auth/calendar", "https://www.googleapis.com/auth/calendar.readonly"], "description": "Returns metadata for a calendar.", "parameters": {"calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}}, "response": {"$ref": "Calendar"}, "httpMethod": "GET", "parameterOrder": ["calendarId"], "path": "calendars/{calendarId}", "id": "calendar.calendars.get"}, "clear": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Clears a primary calendar. This operation deletes all data associated with the primary calendar of an account and cannot be undone.", "parameters": {"calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}}, "httpMethod": "POST", "parameterOrder": ["calendarId"], "path": "calendars/{calendarId}/clear", "id": "calendar.calendars.clear"}, "update": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Updates metadata for a calendar.", "parameters": {"calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}}, "request": {"$ref": "Calendar"}, "response": {"$ref": "Calendar"}, "httpMethod": "PUT", "parameterOrder": ["calendarId"], "path": "calendars/{calendarId}", "id": "calendar.calendars.update"}, "patch": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Updates metadata for a calendar. This method supports patch semantics.", "parameters": {"calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}}, "request": {"$ref": "Calendar"}, "response": {"$ref": "Calendar"}, "httpMethod": "PATCH", "parameterOrder": ["calendarId"], "path": "calendars/{calendarId}", "id": "calendar.calendars.patch"}, "delete": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Deletes a secondary calendar.", "parameters": {"calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}}, "httpMethod": "DELETE", "parameterOrder": ["calendarId"], "path": "calendars/{calendarId}", "id": "calendar.calendars.delete"}}}, "acl": {"methods": {"insert": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Creates an access control rule.", "parameters": {"calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}}, "request": {"$ref": "AclRule"}, "response": {"$ref": "AclRule"}, "httpMethod": "POST", "parameterOrder": ["calendarId"], "path": "calendars/{calendarId}/acl", "id": "calendar.acl.insert"}, "get": {"scopes": ["https://www.googleapis.com/auth/calendar", "https://www.googleapis.com/auth/calendar.readonly"], "description": "Returns an access control rule.", "parameters": {"calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}, "ruleId": {"required": true, "type": "string", "description": "ACL rule identifier.", "location": "path"}}, "response": {"$ref": "AclRule"}, "httpMethod": "GET", "parameterOrder": ["calendarId", "ruleId"], "path": "calendars/{calendarId}/acl/{ruleId}", "id": "calendar.acl.get"}, "list": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Returns the rules in the access control list for the calendar.", "parameters": {"calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}}, "response": {"$ref": "Acl"}, "httpMethod": "GET", "parameterOrder": ["calendarId"], "path": "calendars/{calendarId}/acl", "id": "calendar.acl.list"}, "update": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Updates an access control rule.", "parameters": {"calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}, "ruleId": {"required": true, "type": "string", "description": "ACL rule identifier.", "location": "path"}}, "request": {"$ref": "AclRule"}, "response": {"$ref": "AclRule"}, "httpMethod": "PUT", "parameterOrder": ["calendarId", "ruleId"], "path": "calendars/{calendarId}/acl/{ruleId}", "id": "calendar.acl.update"}, "patch": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Updates an access control rule. This method supports patch semantics.", "parameters": {"calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}, "ruleId": {"required": true, "type": "string", "description": "ACL rule identifier.", "location": "path"}}, "request": {"$ref": "AclRule"}, "response": {"$ref": "AclRule"}, "httpMethod": "PATCH", "parameterOrder": ["calendarId", "ruleId"], "path": "calendars/{calendarId}/acl/{ruleId}", "id": "calendar.acl.patch"}, "delete": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Deletes an access control rule.", "parameters": {"calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}, "ruleId": {"required": true, "type": "string", "description": "ACL rule identifier.", "location": "path"}}, "httpMethod": "DELETE", "parameterOrder": ["calendarId", "ruleId"], "path": "calendars/{calendarId}/acl/{ruleId}", "id": "calendar.acl.delete"}}}, "colors": {"methods": {"get": {"scopes": ["https://www.googleapis.com/auth/calendar", "https://www.googleapis.com/auth/calendar.readonly"], "description": "Returns the color definitions for calendars and events.", "id": "calendar.colors.get", "httpMethod": "GET", "path": "colors", "response": {"$ref": "Colors"}}}}, "events": {"methods": {"insert": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Creates an event.", "parameters": {"calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}, "sendNotifications": {"type": "boolean", "description": "Whether to send notifications about the creation of the new event. Optional. The default is False.", "location": "query"}, "maxAttendees": {"location": "query", "minimum": "1", "type": "integer", "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.", "format": "int32"}}, "request": {"$ref": "Event"}, "response": {"$ref": "Event"}, "httpMethod": "POST", "parameterOrder": ["calendarId"], "path": "calendars/{calendarId}/events", "id": "calendar.events.insert"}, "get": {"scopes": ["https://www.googleapis.com/auth/calendar", "https://www.googleapis.com/auth/calendar.readonly"], "description": "Returns an event.", "parameters": {"eventId": {"required": true, "type": "string", "description": "Event identifier.", "location": "path"}, "timeZone": {"type": "string", "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.", "location": "query"}, "calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}, "alwaysIncludeEmail": {"type": "boolean", "description": "Whether to always include a value in the \"email\" field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.", "location": "query"}, "maxAttendees": {"location": "query", "minimum": "1", "type": "integer", "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.", "format": "int32"}}, "response": {"$ref": "Event"}, "httpMethod": "GET", "parameterOrder": ["calendarId", "eventId"], "path": "calendars/{calendarId}/events/{eventId}", "id": "calendar.events.get"}, "move": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Moves an event to another calendar, i.e. changes an event's organizer.", "parameters": {"eventId": {"required": true, "type": "string", "description": "Event identifier.", "location": "path"}, "destination": {"required": true, "type": "string", "description": "Calendar identifier of the target calendar where the event is to be moved to.", "location": "query"}, "calendarId": {"required": true, "type": "string", "description": "Calendar identifier of the source calendar where the event currently is on.", "location": "path"}, "sendNotifications": {"type": "boolean", "description": "Whether to send notifications about the change of the event's organizer. Optional. The default is False.", "location": "query"}}, "response": {"$ref": "Event"}, "httpMethod": "POST", "parameterOrder": ["calendarId", "eventId", "destination"], "path": "calendars/{calendarId}/events/{eventId}/move", "id": "calendar.events.move"}, "list": {"scopes": ["https://www.googleapis.com/auth/calendar", "https://www.googleapis.com/auth/calendar.readonly"], "description": "Returns events on the specified calendar.", "parameters": {"orderBy": {"enumDescriptions": ["Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter \"singleEvents\" is True)", "Order by last modification time (ascending)."], "enum": ["startTime", "updated"], "type": "string", "description": "The order of the events returned in the result. Optional. The default is an unspecified, stable order.", "location": "query"}, "showHiddenInvitations": {"type": "boolean", "description": "Whether to include hidden invitations in the result. Optional. The default is False.", "location": "query"}, "showDeleted": {"type": "boolean", "description": "Whether to include deleted events (with 'status' equals 'cancelled') in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if 'showDeleted' and 'singleEvents' are both False. If 'showDeleted' and 'singleEvents' are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.", "location": "query"}, "iCalUID": {"type": "string", "description": "Specifies iCalendar UID (iCalUID) of events to be included in the response. Optional.", "location": "query"}, "updatedMin": {"location": "query", "type": "string", "description": "Lower bound for an event's last modification time (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by last modification time.", "format": "date-time"}, "singleEvents": {"type": "boolean", "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.", "location": "query"}, "alwaysIncludeEmail": {"type": "boolean", "description": "Whether to always include a value in the \"email\" field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.", "location": "query"}, "maxResults": {"location": "query", "minimum": "1", "type": "integer", "description": "Maximum number of events returned on one result page. Optional.", "format": "int32"}, "q": {"type": "string", "description": "Free text search terms to find events that match these terms in any field, except for extended properties. Optional.", "location": "query"}, "pageToken": {"type": "string", "description": "Token specifying which result page to return. Optional.", "location": "query"}, "calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}, "timeMin": {"location": "query", "type": "string", "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.", "format": "date-time"}, "timeZone": {"type": "string", "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.", "location": "query"}, "timeMax": {"location": "query", "type": "string", "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.", "format": "date-time"}, "maxAttendees": {"location": "query", "minimum": "1", "type": "integer", "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.", "format": "int32"}}, "response": {"$ref": "Events"}, "httpMethod": "GET", "supportsSubscription": true, "parameterOrder": ["calendarId"], "path": "calendars/{calendarId}/events", "id": "calendar.events.list"}, "update": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Updates an event.", "parameters": {"eventId": {"required": true, "type": "string", "description": "Event identifier.", "location": "path"}, "calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}, "sendNotifications": {"type": "boolean", "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.", "location": "query"}, "alwaysIncludeEmail": {"type": "boolean", "description": "Whether to always include a value in the \"email\" field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.", "location": "query"}, "maxAttendees": {"location": "query", "minimum": "1", "type": "integer", "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.", "format": "int32"}}, "request": {"$ref": "Event"}, "response": {"$ref": "Event"}, "httpMethod": "PUT", "parameterOrder": ["calendarId", "eventId"], "path": "calendars/{calendarId}/events/{eventId}", "id": "calendar.events.update"}, "patch": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Updates an event. This method supports patch semantics.", "parameters": {"eventId": {"required": true, "type": "string", "description": "Event identifier.", "location": "path"}, "calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}, "sendNotifications": {"type": "boolean", "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.", "location": "query"}, "alwaysIncludeEmail": {"type": "boolean", "description": "Whether to always include a value in the \"email\" field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.", "location": "query"}, "maxAttendees": {"location": "query", "minimum": "1", "type": "integer", "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.", "format": "int32"}}, "request": {"$ref": "Event"}, "response": {"$ref": "Event"}, "httpMethod": "PATCH", "parameterOrder": ["calendarId", "eventId"], "path": "calendars/{calendarId}/events/{eventId}", "id": "calendar.events.patch"}, "instances": {"scopes": ["https://www.googleapis.com/auth/calendar", "https://www.googleapis.com/auth/calendar.readonly"], "description": "Returns instances of the specified recurring event.", "parameters": {"eventId": {"required": true, "type": "string", "description": "Recurring event identifier.", "location": "path"}, "showDeleted": {"type": "boolean", "description": "Whether to include deleted events (with 'status' equals 'cancelled') in the result. Cancelled instances of recurring events will still be included if 'singleEvents' is False. Optional. The default is False.", "location": "query"}, "timeMax": {"location": "query", "type": "string", "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.", "format": "date-time"}, "alwaysIncludeEmail": {"type": "boolean", "description": "Whether to always include a value in the \"email\" field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.", "location": "query"}, "maxResults": {"location": "query", "minimum": "1", "type": "integer", "description": "Maximum number of events returned on one result page. Optional.", "format": "int32"}, "pageToken": {"type": "string", "description": "Token specifying which result page to return. Optional.", "location": "query"}, "calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}, "timeMin": {"location": "query", "type": "string", "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.", "format": "date-time"}, "timeZone": {"type": "string", "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.", "location": "query"}, "originalStart": {"type": "string", "description": "The original start time of the instance in the result. Optional.", "location": "query"}, "maxAttendees": {"location": "query", "minimum": "1", "type": "integer", "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.", "format": "int32"}}, "response": {"$ref": "Events"}, "httpMethod": "GET", "supportsSubscription": true, "parameterOrder": ["calendarId", "eventId"], "path": "calendars/{calendarId}/events/{eventId}/instances", "id": "calendar.events.instances"}, "import": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Imports an event.", "parameters": {"calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}}, "request": {"$ref": "Event"}, "response": {"$ref": "Event"}, "httpMethod": "POST", "parameterOrder": ["calendarId"], "path": "calendars/{calendarId}/events/import", "id": "calendar.events.import"}, "quickAdd": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Creates an event based on a simple text string.", "parameters": {"text": {"required": true, "type": "string", "description": "The text describing the event to be created.", "location": "query"}, "calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}, "sendNotifications": {"type": "boolean", "description": "Whether to send notifications about the creation of the event. Optional. The default is False.", "location": "query"}}, "response": {"$ref": "Event"}, "httpMethod": "POST", "parameterOrder": ["calendarId", "text"], "path": "calendars/{calendarId}/events/quickAdd", "id": "calendar.events.quickAdd"}, "delete": {"scopes": ["https://www.googleapis.com/auth/calendar"], "description": "Deletes an event.", "parameters": {"eventId": {"required": true, "type": "string", "description": "Event identifier.", "location": "path"}, "calendarId": {"required": true, "type": "string", "description": "Calendar identifier.", "location": "path"}, "sendNotifications": {"type": "boolean", "description": "Whether to send notifications about the deletion of the event. Optional. The default is False.", "location": "query"}}, "httpMethod": "DELETE", "parameterOrder": ["calendarId", "eventId"], "path": "calendars/{calendarId}/events/{eventId}", "id": "calendar.events.delete"}}}}, "revision": 39, "revision_date": "20130403"}